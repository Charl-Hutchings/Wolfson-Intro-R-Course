"F11", "F12", "F7", "F8",
"F1", "F2", "F3", "F4")
## define the TMTplex that each file corresponds to
exp_set <- c("unstim_rep1_set1", "unstim_rep1_set2",
"unstim_rep2_set1", "unstim_rep2_set2",
"unstim_rep3_set1", "unstim_rep3_set2",
"lps_rep1_set1", "lps_rep1_set2",
"lps_rep2_set1", "lps_rep2_set2",
"lps_rep3_set1", "lps_rep3_set2")
## convert fileID to corresponding experimental set
for (i in 1:length(raw_id)) {
id <- gsub(raw_id[i], exp_set[i], id)
}
## add experimental set to rowData of QFeatures
rowData(thp[["psms_raw"]])$exp_set <- id
## create copy which we will filter upon and rename the experiment "psms_filtered"
raw_copy <- thp[["psms_raw"]]
thp <- addAssay(x = thp,
y = raw_copy,
name = "psms_filtered")
thp
assay(thp[["psms_raw"]]) %>% head()
assay(thp[["psms_raw"]])[1, ]
lapply(X = exp_set, function(z) {
## subset raw PSMs corresponding to the set of interest
rows <- which(rowData(thp[["psms_raw"]])$exp_set == exp_set[z])
obj <- rowData(thp[["psms_raw"]])[rows, ] %>%
as_tibble()
## plot quality control graphs for that object
col_theme <- lighten(lighten(lighten("#69b3a2")))
col_theme <- "lightgrey"
gg_sps <- ggplot(obj, aes(x = SPS.Mass.Matches.in.Percent)) +
geom_histogram(fill = col_theme, color = "#e9ecef", binwidth = 10) +
theme_bw() +
xlab("SPS Mass Matches in percent") +
geom_vline(xintercept = 50, colour = "grey", linetype = 2)
gg_iso_int <- ggplot(obj, aes(x = Isolation.Interference.in.Percent)) +
geom_density(fill = col_theme, color = "#e9ecef", alpha = 0.8) +
theme_bw() +
xlab("Isolation interference in %") +
geom_vline(xintercept = 50, colour = "grey", linetype = 2)
gg_sig_noise <- ggplot(obj, aes(x = log(Average.Reporter.SN))) +
geom_density(fill = col_theme, color = "#e9ecef", alpha = 0.8) +
theme_bw() +
xlab("log10 (Average reporter S/N)") +
geom_vline(xintercept = 1, colour = "grey", linetype = 2)
gg_mass_dev <- ggplot(obj, aes(x = log(Delta.M.in.ppm))) +
geom_density(fill = col_theme, color = "#e9ecef", alpha = 0.8) +
theme_bw() +
xlab("Mass deviation") +
geom_vline(xintercept = 0, colour = "grey", linetype = 2)
gg_ion_inj <- ggplot(obj, aes(x = Ion.Inject.Time.in.ms)) +
geom_density(fill = col_theme, color = "#e9ecef", alpha = 0.8) +
theme_bw() +
xlab("Ion injection time [ms]")
dat <- assay(thp[["psms_raw"]])[rows, ] %>% longFormat()
boxplot_intensities <- ggplot(dat, aes(x = colname, y = log(value))) +
geom_boxplot() +
theme_bw() +
ylab("log10 intensity") +
xlab("TMT channel")
ggarrange(gg_ion_inj, gg_iso_int, gg_sig_noise, gg_mass_dev,
gg_sps, boxplot_intensities, ncol = 2, nrow = 3)
})
rows <- which(rowData(thp[["psms_raw"]])$exp_set == exp_set[1])
obj <- rowData(thp[["psms_raw"]])[rows, ] %>%
as_tibble()
obj
## plot quality control graphs for that object
col_theme <- lighten(lighten(lighten("#69b3a2")))
col_theme <- "lightgrey"
ggplot(obj, aes(x = SPS.Mass.Matches.in.Percent)) +
geom_histogram(fill = col_theme, color = "#e9ecef", binwidth = 10) +
theme_bw() +
xlab("SPS Mass Matches in percent") +
geom_vline(xintercept = 50, colour = "grey", linetype = 2)
ggplot(obj, aes(x = Isolation.Interference.in.Percent)) +
geom_density(fill = col_theme, color = "#e9ecef", alpha = 0.8) +
theme_bw() +
xlab("Isolation interference in %") +
geom_vline(xintercept = 50, colour = "grey", linetype = 2)
ggplot(obj, aes(x = log(Average.Reporter.SN))) +
geom_density(fill = col_theme, color = "#e9ecef", alpha = 0.8) +
theme_bw() +
xlab("log10 (Average reporter S/N)") +
geom_vline(xintercept = 1, colour = "grey", linetype = 2)
ggplot(obj, aes(x = log(Delta.M.in.ppm))) +
geom_density(fill = col_theme, color = "#e9ecef", alpha = 0.8) +
theme_bw() +
xlab("Mass deviation") +
geom_vline(xintercept = 0, colour = "grey", linetype = 2)
ggplot(obj, aes(x = Ion.Inject.Time.in.ms)) +
geom_density(fill = col_theme, color = "#e9ecef", alpha = 0.8) +
theme_bw() +
xlab("Ion injection time [ms]")
dat <- assay(thp[["psms_raw"]])[rows, ] %>% longFormat() %>%
boxplot_intensities <- ggplot(dat, aes(x = colname, y = log(value))) +
geom_boxplot() +
theme_bw() +
ylab("log10 intensity") +
xlab("TMT channel")
dat <- assay(thp[["psms_raw"]])[rows, ] %>% longFormat()
dat
ggplot(dat, aes(x = colname, y = log(value))) +
geom_boxplot() +
theme_bw() +
ylab("log10 intensity") +
xlab("TMT channel")
names <- gsub("Abundance", "TMT", colnames(dat))
names
names <- gsub("Abundance", "TMT", colname(dat))
dat
head(data)
head(dat)
dat$names <- gsub("Abundance", "TMT", dat$colname)
head(dat)
lapply(X = exp_set, function(z) {
## subset raw PSMs corresponding to the set of interest
rows <- which(rowData(thp[["psms_raw"]])$exp_set == exp_set[z])
obj <- rowData(thp[["psms_raw"]])[rows, ] %>%
as_tibble()
## plot quality control graphs for that object
col_theme <- lighten(lighten(lighten("#69b3a2")))
col_theme <- "lightgrey"
gg_sps <- ggplot(obj, aes(x = SPS.Mass.Matches.in.Percent)) +
geom_histogram(fill = col_theme, color = "#e9ecef", binwidth = 10) +
theme_bw() +
xlab("SPS Mass Matches in percent") +
geom_vline(xintercept = 50, colour = "grey", linetype = 2)
gg_iso_int <- ggplot(obj, aes(x = Isolation.Interference.in.Percent)) +
geom_density(fill = col_theme, color = "#e9ecef", alpha = 0.8) +
theme_bw() +
xlab("Isolation interference in %") +
geom_vline(xintercept = 50, colour = "grey", linetype = 2)
gg_sig_noise <- ggplot(obj, aes(x = log(Average.Reporter.SN))) +
geom_density(fill = col_theme, color = "#e9ecef", alpha = 0.8) +
theme_bw() +
xlab("log10 (Average reporter S/N)") +
geom_vline(xintercept = 1, colour = "grey", linetype = 2)
gg_mass_dev <- ggplot(obj, aes(x = log(Delta.M.in.ppm))) +
geom_density(fill = col_theme, color = "#e9ecef", alpha = 0.8) +
theme_bw() +
xlab("Mass deviation") +
geom_vline(xintercept = 0, colour = "grey", linetype = 2)
gg_ion_inj <- ggplot(obj, aes(x = Ion.Inject.Time.in.ms)) +
geom_density(fill = col_theme, color = "#e9ecef", alpha = 0.8) +
theme_bw() +
xlab("Ion injection time [ms]")
dat <- assay(thp[["psms_raw"]])[rows, ] %>% longFormat()
dat$names <- gsub("Abundance", "TMT", dat$colname)
boxplot_intensities <- ggplot(dat, aes(x = names, y = log(value))) +
geom_boxplot() +
theme_bw() +
ylab("log10 intensity") +
xlab("TMT channel")
ggarrange(gg_ion_inj, gg_iso_int, gg_sig_noise, gg_mass_dev,
gg_sps, boxplot_intensities, ncol = 2, nrow = 3)
})
ggplot(dat, aes(x = names, y = log(value))) +
geom_boxplot() +
theme_bw() +
ylab("log10 intensity") +
xlab("TMT channel")
gg_sps <- ggplot(obj, aes(x = SPS.Mass.Matches.in.Percent)) +
geom_histogram(fill = col_theme, color = "#e9ecef", binwidth = 10) +
theme_bw() +
xlab("SPS Mass Matches in percent") +
geom_vline(xintercept = 50, colour = "grey", linetype = 2)
gg_iso_int <- ggplot(obj, aes(x = Isolation.Interference.in.Percent)) +
geom_density(fill = col_theme, color = "#e9ecef", alpha = 0.8) +
theme_bw() +
xlab("Isolation interference in %") +
geom_vline(xintercept = 50, colour = "grey", linetype = 2)
gg_sig_noise <- ggplot(obj, aes(x = log(Average.Reporter.SN))) +
geom_density(fill = col_theme, color = "#e9ecef", alpha = 0.8) +
theme_bw() +
xlab("log10 (Average reporter S/N)") +
geom_vline(xintercept = 1, colour = "grey", linetype = 2)
gg_mass_dev <- ggplot(obj, aes(x = log(Delta.M.in.ppm))) +
geom_density(fill = col_theme, color = "#e9ecef", alpha = 0.8) +
theme_bw() +
xlab("Mass deviation") +
geom_vline(xintercept = 0, colour = "grey", linetype = 2)
gg_ion_inj <- ggplot(obj, aes(x = Ion.Inject.Time.in.ms)) +
geom_density(fill = col_theme, color = "#e9ecef", alpha = 0.8) +
theme_bw() +
xlab("Ion injection time [ms]")
boxplot_intensities <- ggplot(dat, aes(x = names, y = log(value))) +
geom_boxplot() +
theme_bw() +
ylab("log10 intensity") +
xlab("TMT channel")
ggarrange(gg_ion_inj, gg_iso_int, gg_sig_noise, gg_mass_dev,
gg_sps, boxplot_intensities, ncol = 2, nrow = 3)
lapply(X = exp_set, function(z) {
## subset raw PSMs corresponding to the set of interest
rows <- which(rowData(thp[["psms_raw"]])$exp_set == exp_set[z])
obj <- rowData(thp[["psms_raw"]])[rows, ] %>%
as_tibble()
## plot quality control graphs for that object
col_theme <- lighten(lighten(lighten("#69b3a2")))
col_theme <- "lightgrey"
gg_sps <- ggplot(obj, aes(x = SPS.Mass.Matches.in.Percent)) +
geom_histogram(fill = col_theme, color = "#e9ecef", binwidth = 10) +
theme_bw() +
xlab("SPS Mass Matches in percent") +
geom_vline(xintercept = 50, colour = "grey", linetype = 2)
gg_iso_int <- ggplot(obj, aes(x = Isolation.Interference.in.Percent)) +
geom_density(fill = col_theme, color = "#e9ecef", alpha = 0.8) +
theme_bw() +
xlab("Isolation interference in %") +
geom_vline(xintercept = 50, colour = "grey", linetype = 2)
gg_sig_noise <- ggplot(obj, aes(x = log(Average.Reporter.SN))) +
geom_density(fill = col_theme, color = "#e9ecef", alpha = 0.8) +
theme_bw() +
xlab("log10 (Average reporter S/N)") +
geom_vline(xintercept = 1, colour = "grey", linetype = 2)
gg_mass_dev <- ggplot(obj, aes(x = log(Delta.M.in.ppm))) +
geom_density(fill = col_theme, color = "#e9ecef", alpha = 0.8) +
theme_bw() +
xlab("Mass deviation") +
geom_vline(xintercept = 0, colour = "grey", linetype = 2)
gg_ion_inj <- ggplot(obj, aes(x = Ion.Inject.Time.in.ms)) +
geom_density(fill = col_theme, color = "#e9ecef", alpha = 0.8) +
theme_bw() +
xlab("Ion injection time [ms]")
dat <- assay(thp[["psms_raw"]])[rows, ] %>% longFormat()
dat$names <- gsub("Abundance", "TMT", dat$colname)
boxplot_intensities <- ggplot(dat, aes(x = names, y = log(value))) +
geom_boxplot() +
theme_bw() +
ylab("log10 intensity") +
xlab("TMT channel")
ggarrange(gg_ion_inj, gg_mass_dev, gg_iso_int, gg_sig_noise,
gg_sps, boxplot_intensities, ncol = 2, nrow = 3)
})
lapply(X = exp_set, function(z) {
## subset raw PSMs corresponding to the set of interest
rows <- which(rowData(thp[["psms_raw"]])$exp_set == exp_set[z])
obj <- rowData(thp[["psms_raw"]])[rows, ] %>%
as_tibble()
## plot quality control graphs for that object
col_theme <- lighten(lighten(lighten("#69b3a2")))
col_theme <- "lightgrey"
gg_sps <- ggplot(obj, aes(x = SPS.Mass.Matches.in.Percent)) +
geom_histogram(fill = col_theme, color = "#e9ecef", binwidth = 10) +
theme_bw() +
xlab("SPS Mass Matches in percent") +
geom_vline(xintercept = 50, colour = "grey", linetype = 2)
gg_iso_int <- ggplot(obj, aes(x = Isolation.Interference.in.Percent)) +
geom_density(fill = col_theme, color = "#e9ecef", alpha = 0.8) +
theme_bw() +
xlab("Isolation interference in %") +
geom_vline(xintercept = 50, colour = "grey", linetype = 2)
gg_sig_noise <- ggplot(obj, aes(x = log(Average.Reporter.SN))) +
geom_density(fill = col_theme, color = "#e9ecef", alpha = 0.8) +
theme_bw() +
xlab("log10 (Average reporter S/N)") +
geom_vline(xintercept = 1, colour = "grey", linetype = 2)
gg_mass_dev <- ggplot(obj, aes(x = log(Delta.M.in.ppm))) +
geom_density(fill = col_theme, color = "#e9ecef", alpha = 0.8) +
theme_bw() +
xlab("Mass deviation") +
geom_vline(xintercept = 0, colour = "grey", linetype = 2)
gg_ion_inj <- ggplot(obj, aes(x = Ion.Inject.Time.in.ms)) +
geom_density(fill = col_theme, color = "#e9ecef", alpha = 0.8) +
theme_bw() +
xlab("Ion injection time [ms]")
dat <- assay(thp[["psms_raw"]])[rows, ] %>% longFormat()
dat$names <- gsub("Abundance", "TMT", dat$colname)
boxplot_intensities <- ggplot(dat, aes(x = names, y = log(value))) +
geom_boxplot() +
theme_bw() +
ylab("log10 intensity") +
xlab("TMT channel")
}
ggarrange(gg_ion_inj, gg_mass_dev, gg_iso_int, gg_sig_noise,
lapply(X = exp_set, function(z) {
## subset raw PSMs corresponding to the set of interest
rows <- which(rowData(thp[["psms_raw"]])$exp_set == exp_set[z])
obj <- rowData(thp[["psms_raw"]])[rows, ] %>%
as_tibble()
## plot quality control graphs for that object
col_theme <- lighten(lighten(lighten("#69b3a2")))
col_theme <- "lightgrey"
gg_sps <- ggplot(obj, aes(x = SPS.Mass.Matches.in.Percent)) +
geom_histogram(fill = col_theme, color = "#e9ecef", binwidth = 10) +
theme_bw() +
xlab("SPS Mass Matches in percent") +
geom_vline(xintercept = 50, colour = "grey", linetype = 2)
gg_iso_int <- ggplot(obj, aes(x = Isolation.Interference.in.Percent)) +
geom_density(fill = col_theme, color = "#e9ecef", alpha = 0.8) +
theme_bw() +
xlab("Isolation interference in %") +
geom_vline(xintercept = 50, colour = "grey", linetype = 2)
gg_sig_noise <- ggplot(obj, aes(x = log(Average.Reporter.SN))) +
geom_density(fill = col_theme, color = "#e9ecef", alpha = 0.8) +
theme_bw() +
xlab("log10 (Average reporter S/N)") +
geom_vline(xintercept = 1, colour = "grey", linetype = 2)
gg_mass_dev <- ggplot(obj, aes(x = log(Delta.M.in.ppm))) +
geom_density(fill = col_theme, color = "#e9ecef", alpha = 0.8) +
theme_bw() +
xlab("Mass deviation") +
geom_vline(xintercept = 0, colour = "grey", linetype = 2)
gg_ion_inj <- ggplot(obj, aes(x = Ion.Inject.Time.in.ms)) +
geom_density(fill = col_theme, color = "#e9ecef", alpha = 0.8) +
theme_bw() +
xlab("Ion injection time [ms]")
dat <- assay(thp[["psms_raw"]])[rows, ] %>% longFormat()
dat$names <- gsub("Abundance", "TMT", dat$colname)
boxplot_intensities <- ggplot(dat, aes(x = names, y = log(value))) +
geom_boxplot() +
theme_bw() +
ylab("log10 intensity") +
xlab("TMT channel")
ggarrange(gg_ion_inj, gg_mass_dev, gg_iso_int, gg_sig_noise,
gg_sps, boxplot_intensities, ncol = 2, nrow = 3)
})
lapply(X = exp_set, FUN = function(z) {
## subset raw PSMs corresponding to the set of interest
rows <- which(rowData(thp[["psms_raw"]])$exp_set == exp_set[z])
obj <- rowData(thp[["psms_raw"]])[rows, ] %>%
as_tibble()
## plot quality control graphs for that object
col_theme <- lighten(lighten(lighten("#69b3a2")))
col_theme <- "lightgrey"
gg_sps <- ggplot(obj, aes(x = SPS.Mass.Matches.in.Percent)) +
geom_histogram(fill = col_theme, color = "#e9ecef", binwidth = 10) +
theme_bw() +
xlab("SPS Mass Matches in percent") +
geom_vline(xintercept = 50, colour = "grey", linetype = 2)
gg_iso_int <- ggplot(obj, aes(x = Isolation.Interference.in.Percent)) +
geom_density(fill = col_theme, color = "#e9ecef", alpha = 0.8) +
theme_bw() +
xlab("Isolation interference in %") +
geom_vline(xintercept = 50, colour = "grey", linetype = 2)
gg_sig_noise <- ggplot(obj, aes(x = log(Average.Reporter.SN))) +
geom_density(fill = col_theme, color = "#e9ecef", alpha = 0.8) +
theme_bw() +
xlab("log10 (Average reporter S/N)") +
geom_vline(xintercept = 1, colour = "grey", linetype = 2)
gg_mass_dev <- ggplot(obj, aes(x = log(Delta.M.in.ppm))) +
geom_density(fill = col_theme, color = "#e9ecef", alpha = 0.8) +
theme_bw() +
xlab("Mass deviation") +
geom_vline(xintercept = 0, colour = "grey", linetype = 2)
gg_ion_inj <- ggplot(obj, aes(x = Ion.Inject.Time.in.ms)) +
geom_density(fill = col_theme, color = "#e9ecef", alpha = 0.8) +
theme_bw() +
xlab("Ion injection time [ms]")
dat <- assay(thp[["psms_raw"]])[rows, ] %>% longFormat()
dat$names <- gsub("Abundance", "TMT", dat$colname)
boxplot_intensities <- ggplot(dat, aes(x = names, y = log(value))) +
geom_boxplot() +
theme_bw() +
ylab("log10 intensity") +
xlab("TMT channel")
plots <- ggarrange(gg_ion_inj, gg_mass_dev, gg_iso_int, gg_sig_noise,
gg_sps, boxplot_intensities, ncol = 2, nrow = 3)
return(plots)
})
?ggarrange
ggarrange(gg_ion_inj, gg_mass_dev, gg_iso_int, gg_sig_noise,
gg_sps, boxplot_intensities, ncol = 2, nrow = 3)
exp_set
lapply(X = exp_set, FUN = function(z) {
## subset raw PSMs corresponding to the set of interest
rows <- which(rowData(thp[["psms_raw"]])$exp_set == z)
obj <- rowData(thp[["psms_raw"]])[rows, ] %>%
as_tibble()
## plot quality control graphs for that object
col_theme <- lighten(lighten(lighten("#69b3a2")))
col_theme <- "lightgrey"
gg_sps <- ggplot(obj, aes(x = SPS.Mass.Matches.in.Percent)) +
geom_histogram(fill = col_theme, color = "#e9ecef", binwidth = 10) +
theme_bw() +
xlab("SPS Mass Matches in percent") +
geom_vline(xintercept = 50, colour = "grey", linetype = 2)
gg_iso_int <- ggplot(obj, aes(x = Isolation.Interference.in.Percent)) +
geom_density(fill = col_theme, color = "#e9ecef", alpha = 0.8) +
theme_bw() +
xlab("Isolation interference in %") +
geom_vline(xintercept = 50, colour = "grey", linetype = 2)
gg_sig_noise <- ggplot(obj, aes(x = log(Average.Reporter.SN))) +
geom_density(fill = col_theme, color = "#e9ecef", alpha = 0.8) +
theme_bw() +
xlab("log10 (Average reporter S/N)") +
geom_vline(xintercept = 1, colour = "grey", linetype = 2)
gg_mass_dev <- ggplot(obj, aes(x = log(Delta.M.in.ppm))) +
geom_density(fill = col_theme, color = "#e9ecef", alpha = 0.8) +
theme_bw() +
xlab("Mass deviation") +
geom_vline(xintercept = 0, colour = "grey", linetype = 2)
gg_ion_inj <- ggplot(obj, aes(x = Ion.Inject.Time.in.ms)) +
geom_density(fill = col_theme, color = "#e9ecef", alpha = 0.8) +
theme_bw() +
xlab("Ion injection time [ms]")
dat <- assay(thp[["psms_raw"]])[rows, ] %>% longFormat()
dat$names <- gsub("Abundance", "TMT", dat$colname)
boxplot_intensities <- ggplot(dat, aes(x = names, y = log(value))) +
geom_boxplot() +
theme_bw() +
ylab("log10 intensity") +
xlab("TMT channel")
ggarrange(gg_ion_inj, gg_mass_dev, gg_iso_int, gg_sig_noise,
gg_sps, boxplot_intensities, ncol = 2, nrow = 3)
})
?lapply
## subset raw PSMs corresponding to the set of interest
rows <- which(rowData(thp[["psms_raw"]])$exp_set == exp_set[8])
obj <- rowData(thp[["psms_raw"]])[rows, ] %>%
as_tibble()
## plot quality control graphs for that object
col_theme <- lighten(lighten(lighten("#69b3a2")))
col_theme <- "lightgrey"
gg_sps <- ggplot(obj, aes(x = SPS.Mass.Matches.in.Percent)) +
geom_histogram(fill = col_theme, color = "#e9ecef", binwidth = 10) +
theme_bw() +
xlab("SPS Mass Matches in percent") +
geom_vline(xintercept = 50, colour = "grey", linetype = 2)
gg_iso_int <- ggplot(obj, aes(x = Isolation.Interference.in.Percent)) +
geom_density(fill = col_theme, color = "#e9ecef", alpha = 0.8) +
theme_bw() +
xlab("Isolation interference in %") +
geom_vline(xintercept = 50, colour = "grey", linetype = 2)
gg_sig_noise <- ggplot(obj, aes(x = log(Average.Reporter.SN))) +
geom_density(fill = col_theme, color = "#e9ecef", alpha = 0.8) +
theme_bw() +
xlab("log10 (Average reporter S/N)") +
geom_vline(xintercept = 1, colour = "grey", linetype = 2)
gg_mass_dev <- ggplot(obj, aes(x = log(Delta.M.in.ppm))) +
geom_density(fill = col_theme, color = "#e9ecef", alpha = 0.8) +
theme_bw() +
xlab("Mass deviation") +
geom_vline(xintercept = 0, colour = "grey", linetype = 2)
gg_ion_inj <- ggplot(obj, aes(x = Ion.Inject.Time.in.ms)) +
geom_density(fill = col_theme, color = "#e9ecef", alpha = 0.8) +
theme_bw() +
xlab("Ion injection time [ms]")
dat <- assay(thp[["psms_raw"]])[rows, ] %>% longFormat()
dat$names <- gsub("Abundance", "TMT", dat$colname)
boxplot_intensities <- ggplot(dat, aes(x = names, y = log(value))) +
geom_boxplot() +
theme_bw() +
ylab("log10 intensity") +
xlab("TMT channel")
ggarrange(gg_ion_inj, gg_mass_dev, gg_iso_int, gg_sig_noise,
gg_sps, boxplot_intensities, ncol = 2, nrow = 3)
thp
## basic data cleaning using filterFeatures
thp <- thp %>%
filterFeatures(~ Contaminant == "False", i = "psms_filtered") %>%
filterFeatures(~ Master.Protein.Accessions != "", i = "psms_filtered") %>%
filterFeatures(~ Rank == 1, i = "psms_filtered") %>%
filterFeatures(~ Search.Engine.Rank == 1, i = "psms_filtered") %>%
filterFeatures(~ Concatenated.Rank == 1, i = "psms_filtered") %>%
filterFeatures(~ Number.of.Proteins == 1, i = "psms_filtered") %>%
filterFeatures(~ Number.of.Protein.Groups == 1, i = "psms_filtered") %>%
filterFeatures(~ PSM.Ambiguity == "Unambiguous", i = "psms_filtered")
## data-dependent quality control filtering using filterFeatures
thp <- thp %>%
filterFeatures(~ Isolation.Interference.in.Percent < 75, i = "psms_filtered") %>%
filterFeatures(~ Average.Reporter.SN > 10, i = "psms_filtered") %>%
filterFeatures(~ SPS.Mass.Matches.in.Percent > 40, i = "psms_filtered")
## Search for raw_filenames in Spectrum.File
ind <- lapply(raw_file_id, function(z) grep(z, exp_set))
## Search for raw_filenames in Spectrum.File
ind <- lapply(raw_id, function(z) grep(z, exp_set))
## Look inside ind
str(ind)
raw_id
## Search for raw_filenames in Spectrum.File
ind <- lapply(exp_set, function(z) grep(z, exp_set))
## Look inside ind
str(ind)
## Search for raw_filenames in Spectrum.File
ind <- lapply(exp_set, function(z) grep(z, rowData(thp[["psms_filtered"]])$exp_set))
## Look inside ind
str(ind)
## Subest the "psms_filtered" data according the indices to create 12 SEs
se <- lapply(ind, function(z) thp[["psms_filtered"]][z, ])
## Name our list of SummarizedExperiments (required to add them back to QF)
names(se) <- exp_set
se
for (i in seq_along(raw_file_id)) {
thp <- addAssay(thp, se[[i]], name = paste0("psms_", raw_filename[i]))
}
for (i in seq_along(raw_id)) {
thp <- addAssay(thp, se[[i]], name = paste0("psms_", exp_set[i]))
}
thp
## store the names of all assays
all_assays <- thp %>%
names()
## convert zero values to NA
thp <- zeroIsNA(thp,
i = all_assays)
nNA(thp, i = "psms_filtered")
## Extract missing values information with nNA function
ind <- grep("set", names(thp))
na_stats <- lapply(ind, function(z) nNA(thp[[z]]))
na_stats[[1]]
## tell R the file location
f <- "raw/THP_LOPIT_PSMs.txt"
## store the location of the quantitation data in a vector called i
i <- grep("Abundance", names(read.delim(f)))
getwd()
library(tidyverse)
??get_summary_stats
setwd("~/repos/Wolfson_Intro_R_Course")
rmarkdown::render_site()
